@startuml

abstract class Display {
    +getColumns(): int {abstract}
    +getRows(): int {abstract}
    +getRowText(row: int): String {abstract}
    +show(): void
}

class StringDisplay extends Display {
    -string:  String

    +getColumns(): int
    +getRows(): int
    +getRowText(row: int): String
}

abstract class Border extends Display {
    #display: Display

    #Border(display: Display)
}

class SideBorder extends Border {
    -borderChar: char

    +SideBorder(display: Display, ch: char)
    +getColumns(): int
    +getRows(): int
    +getRowText(row: int): String
}

class FullBorder extends Border {
    +FullBorder(display: Display)
    +getColumns(): int
    +getRows(): int
    +getRowText(row: int): String
    -makeLine(ch: char, count: int): void
}

@enduml